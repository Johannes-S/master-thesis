
# TODO:

## THEORETICAL RESEARCH:

- Rewrite definitions of confluence paper to better fit our HRGs

- Find out if proof of undecidability can be applied for our HRGs
- Find out if counterexample (why simple joinability of critical pairs is not enough) can be modified to fit our HRGs

## PROGRAMMING:

- Implement critical pair generation algorithm

## THESIS WRITING:

- Work on table of contents:


# General Information:


# Table of Contents:
- Abstract

- Introduction
  - context free HRGs
    - terminating grammars
  - double pushout approach (neccessary to explain?)
  - convolution
    - critical pairs

- Related Work
  - Term Rewrite Systems
  - Double Pushout Grammars
    - Undecidability in general case
      - Proof cannot be applied to our case
    - Coverable systems

- Decide Confluence for HRGs
  - General Idea
  - Correctness Proof
  - Implementation
  - Evaluation
    - How fast is the algorithm

- Completion algorithm for HRGs
  - General Idea
     - Different approaches: Keep language the same / extend language
  - Implementation
  - Evaluation
    - How many grammars can the algorithm make confluent
    - How fast is the algorithm

- Conclusion

